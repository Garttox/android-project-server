{define bootstrap-head}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
    crossorigin="anonymous"> 
{/define} 
{define bootstrap-point-form $form}
<div class="container">
	<form n:name=$form class="form">
		<div class="errors text-center bg-warning col-md-4 offset-md-4" n:if="$form->hasErrors()">
			<div n:foreach="$form->errors as $error">
				{$error}
			</div>
		</div>
		<div class="form-group row">
			{label name class => "col-md-2 offset-md-5 col-form-label"}{input name class => "form-control offset-md-1 col-md-10"}
		</div>

		<div class="form-group row">
			{label longitude class => "col-md-2 offset-md-3 col-form-label"}{label latitude class => "col-md-2 offset-md-2 col-form-label"}
			{input longitude class => "form-control col-md-5 offset-md-1"}{input latitude class => "form-control col-md-5"}
			<div class="offset-md-1 col-md-10 map">
				<div class="iframe-container" id="map"></div>
			</div>
			

		</div>

		<div class="form-group row">
			{label text class => "col-md-2 offset-md-5 col-form-label"}{input text class => "form-control offset-md-1 col-md-10"}
		</div>
		<div class="form-group row">
			{label fotoURL }{input fotoURL }
		</div>
		<div class="form-group row">
			{input submit class => "btn btn-primary offset-md-5 col-md-2"}
		</div>
	</form>
</div>
        <script type="text/javascript">
        var map;
        var markers = [];
        var marker;

        function initMap() {      
            var latitude = 49.938875; // YOUR LATITUDE VALUE
            var longitude = 17.902430; // YOUR LONGITUDE VALUE
            
            var myLatLng = { lat: latitude, lng: longitude };
            
            map = new google.maps.Map(document.getElementById('map'), {
              center: myLatLng,
              zoom: 16,
              disableDoubleClickZoom: true, // disable the default map zoom on double click
            });
            
            // Update lat/long value of div when anywhere in the map is clicked    
            google.maps.event.addListener(map,'click',function(event) {                
                document.getElementById('frm-pointForm-latitude').value = event.latLng.lat();
                document.getElementById('frm-pointForm-longitude').value =  event.latLng.lng();
                markers.forEach(function(marker) {
                    marker.setMap(null);
                });
                markers = [];
                marker = new google.maps.Marker({
                  position: event.latLng, 
                  map: map, 
                  title: event.latLng.lat()+', '+event.latLng.lng()
                });
                markers.push(marker);
                setMapOnAll(map);
            }); 

			if(document.getElementById('frm-pointForm-latitude').value != "" && document.getElementById('frm-pointForm-longitude').value != ""){
				var lat=parseFloat(document.getElementById('frm-pointForm-latitude').value);
				var lng=parseFloat(document.getElementById('frm-pointForm-longitude').value);
				marker = new google.maps.Marker({
					position: { lat : lat, lng: lng },
					map: map,
					title: lat+', '+lng
				});
				markers.push(marker);
			}
			

        }

		function setMarker(){
			if(document.getElementById('frm-pointForm-latitude').value != "" && document.getElementById('frm-pointForm-longitude').value != ""){
				var lat=parseFloat(document.getElementById('frm-pointForm-latitude').value);
				var lng=parseFloat(document.getElementById('frm-pointForm-longitude').value);
				markers.forEach(function(marker) {
                    marker.setMap(null);
                });
                markers = [];
				marker = new google.maps.Marker({
					position: { lat : lat, lng: lng },
					map: map,
					title: lat+', '+lng
				});
				markers.push(marker);
			}
		}

        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAcPVxWn2Izh5rGaJKt1ooP-WffiST-jbo&callback=initMap"
    async defer></script>
{/define}